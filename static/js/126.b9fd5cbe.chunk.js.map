{"version":3,"file":"static/js/126.b9fd5cbe.chunk.js","mappings":"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","sources":["../node_modules/@ledgerhq/devices/src/hid-framing.ts","../node_modules/@ledgerhq/devices/node_modules/lru-cache/index.js","../node_modules/@ledgerhq/devices/node_modules/semver/classes/comparator.js","../node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js","../node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/clean.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/cmp.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/coerce.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-build.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-loose.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/diff.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/eq.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/gt.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/gte.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/inc.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/lt.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/lte.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/major.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/minor.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/neq.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/parse.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/patch.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/prerelease.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/rcompare.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/rsort.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/satisfies.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/sort.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/valid.js","../node_modules/@ledgerhq/devices/node_modules/semver/index.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/constants.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/debug.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/identifiers.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/parse-options.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/re.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/gtr.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/intersects.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/ltr.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/max-satisfying.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-satisfying.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-version.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/outside.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/simplify.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/subset.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/to-comparators.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/valid.js","../node_modules/@ledgerhq/devices/node_modules/yallist/iterator.js","../node_modules/@ledgerhq/devices/node_modules/yallist/yallist.js","../node_modules/@ledgerhq/devices/src/index.ts","../node_modules/@ledgerhq/logs/src/index.ts","../node_modules/@ledgerhq/hw-transport-webhid/src/TransportWebHID.ts","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js"],"sourcesContent":["import { TransportError } from \"@ledgerhq/errors\";\nexport type ResponseAcc =\n  | {\n      data: Buffer;\n      dataLength: number;\n      sequence: number;\n    }\n  | null\n  | undefined;\nconst Tag = 0x05;\n\nfunction asUInt16BE(value) {\n  const b = Buffer.alloc(2);\n  b.writeUInt16BE(value, 0);\n  return b;\n}\n\nconst initialAcc = {\n  data: Buffer.alloc(0),\n  dataLength: 0,\n  sequence: 0,\n};\n\n/**\n *\n */\nconst createHIDframing = (channel: number, packetSize: number) => {\n  return {\n    makeBlocks(apdu: Buffer): Buffer[] {\n      let data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n      const blockSize = packetSize - 5;\n      const nbBlocks = Math.ceil(data.length / blockSize);\n      data = Buffer.concat([\n        data, // fill data with padding\n        Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0),\n      ]);\n      const blocks: Buffer[] = [];\n\n      for (let i = 0; i < nbBlocks; i++) {\n        const head = Buffer.alloc(5);\n        head.writeUInt16BE(channel, 0);\n        head.writeUInt8(Tag, 2);\n        head.writeUInt16BE(i, 3);\n        const chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n        blocks.push(Buffer.concat([head, chunk]));\n      }\n\n      return blocks;\n    },\n\n    reduceResponse(acc: ResponseAcc, chunk: Buffer): ResponseAcc {\n      let { data, dataLength, sequence } = acc || initialAcc;\n\n      if (chunk.readUInt16BE(0) !== channel) {\n        throw new TransportError(\"Invalid channel\", \"InvalidChannel\");\n      }\n\n      if (chunk.readUInt8(2) !== Tag) {\n        throw new TransportError(\"Invalid tag\", \"InvalidTag\");\n      }\n\n      if (chunk.readUInt16BE(3) !== sequence) {\n        throw new TransportError(\"Invalid sequence\", \"InvalidSequence\");\n      }\n\n      if (!acc) {\n        dataLength = chunk.readUInt16BE(5);\n      }\n\n      sequence++;\n      const chunkData = chunk.slice(acc ? 5 : 7);\n      data = Buffer.concat([data, chunkData]);\n\n      if (data.length > dataLength) {\n        data = data.slice(0, dataLength);\n      }\n\n      return {\n        data,\n        dataLength,\n        sequence,\n      };\n    },\n\n    getReducedResult(acc: ResponseAcc): Buffer | null | undefined {\n      if (acc && acc.dataLength === acc.data.length) {\n        return acc.data;\n      }\n    },\n  };\n};\n\nexport default createHIDframing;\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceTilde(c, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceCaret(c, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((c) => {\n    return replaceXRange(c, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${require('util').inspect(version)}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (!identifier && identifierBase === false) {\n          throw new Error('invalid increment argument: identifier is empty')\n        }\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // at this point we know stable versions match but overall versions are not equal,\n  // so either they are both prereleases, or the lower version is a prerelease\n\n  if (highHasPre) {\n    // high and low are preleases\n    return 'prerelease'\n  }\n\n  if (lowVersion.patch) {\n    // anything higher than a patch bump would result in the wrong version\n    return 'patch'\n  }\n\n  if (lowVersion.minor) {\n    // anything higher than a minor bump would result in the wrong version\n    return 'minor'\n  }\n\n  // bumping major/minor/patch all have same result\n  return 'major'\n}\n\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","import semver from \"semver\";\n\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */\nexport const IIGenericHID = 0x01;\nexport const IIKeyboardHID = 0x02;\nexport const IIU2F = 0x04;\nexport const IICCID = 0x08;\nexport const IIWebUSB = 0x10;\n\nexport enum DeviceModelId {\n  blue = \"blue\",\n  nanoS = \"nanoS\",\n  nanoSP = \"nanoSP\",\n  nanoX = \"nanoX\",\n  nanoFTS = \"nanoFTS\",\n}\n\nconst devices: { [key in DeviceModelId]: DeviceModel } = {\n  [DeviceModelId.blue]: {\n    id: DeviceModelId.blue,\n    productName: \"Ledger Blue\",\n    productIdMM: 0x00,\n    legacyUsbProductId: 0x0000,\n    usbOnly: true,\n    memorySize: 480 * 1024,\n    masks: [0x31000000, 0x31010000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n  },\n  [DeviceModelId.nanoS]: {\n    id: DeviceModelId.nanoS,\n    productName: \"Ledger Nano S\",\n    productIdMM: 0x10,\n    legacyUsbProductId: 0x0001,\n    usbOnly: true,\n    memorySize: 320 * 1024,\n    masks: [0x31100000],\n    getBlockSize: (firmwareVersion: string): number =>\n      semver.lt(semver.coerce(firmwareVersion) ?? \"\", \"2.0.0\")\n        ? 4 * 1024\n        : 2 * 1024,\n  },\n  [DeviceModelId.nanoSP]: {\n    id: DeviceModelId.nanoSP,\n    productName: \"Ledger Nano S Plus\",\n    productIdMM: 0x50,\n    legacyUsbProductId: 0x0005,\n    usbOnly: true,\n    memorySize: 1536 * 1024,\n    masks: [0x33100000],\n    getBlockSize: (_firmwareVersion: string): number => 32,\n  },\n  [DeviceModelId.nanoX]: {\n    id: DeviceModelId.nanoX,\n    productName: \"Ledger Nano X\",\n    productIdMM: 0x40,\n    legacyUsbProductId: 0x0004,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024,\n    masks: [0x33000000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-0004-0003-4c6564676572\",\n      },\n    ],\n  },\n  [DeviceModelId.nanoFTS]: {\n    id: DeviceModelId.nanoFTS,\n    productName: \"Ledger Nano FTS\",\n    productIdMM: 0x60,\n    legacyUsbProductId: 0x0006,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024, // ← ↓ TODO Update with actual values\n    masks: [0x33200000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-6004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-6004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-6004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-6004-0003-4c6564676572\",\n      },\n    ],\n  },\n};\n\nconst productMap = {\n  Blue: DeviceModelId.blue,\n  \"Nano S\": DeviceModelId.nanoS,\n  \"Nano S Plus\": DeviceModelId.nanoSP,\n  \"Nano X\": DeviceModelId.nanoX,\n  \"Nano FTS\": DeviceModelId.nanoFTS,\n};\n\nconst devicesList: DeviceModel[] = Object.values(devices);\n\n/**\n *\n */\nexport const ledgerUSBVendorId = 0x2c97;\n\n/**\n *\n */\nexport const getDeviceModel = (id: DeviceModelId): DeviceModel => {\n  const info = devices[id];\n  if (!info) throw new Error(\"device '\" + id + \"' does not exist\");\n  return info;\n};\n\n/**\n * Given a `targetId`, return the deviceModel associated to it,\n * based on the first two bytes.\n */\nexport const identifyTargetId = (\n  targetId: number\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find(({ masks }) =>\n    masks.find((mask) => (targetId & 0xffff0000) === mask)\n  );\n\n  return deviceModel;\n};\n\n/**\n *\n */\nexport const identifyUSBProductId = (\n  usbProductId: number\n): DeviceModel | null | undefined => {\n  const legacy = devicesList.find((d) => d.legacyUsbProductId === usbProductId);\n  if (legacy) return legacy;\n  const mm = usbProductId >> 8;\n  const deviceModel = devicesList.find((d) => d.productIdMM === mm);\n  return deviceModel;\n};\n\nexport const identifyProductName = (\n  productName: string\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find((d) => d.id === productMap[productName]);\n  return deviceModel;\n};\n\nconst bluetoothServices: string[] = [];\nconst serviceUuidToInfos: Record<string, BluetoothInfos> = {};\n\nfor (const id in devices) {\n  const deviceModel = devices[id];\n  const { bluetoothSpec } = deviceModel;\n  if (bluetoothSpec) {\n    for (let i = 0; i < bluetoothSpec.length; i++) {\n      const spec = bluetoothSpec[i];\n      bluetoothServices.push(spec.serviceUuid);\n      serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[\n        spec.serviceUuid.replace(/-/g, \"\")\n      ] = {\n        deviceModel,\n        ...spec,\n      };\n    }\n  }\n}\n\n/**\n *\n */\nexport const getBluetoothServiceUuids = (): string[] => bluetoothServices;\n\n/**\n *\n */\nexport const getInfosForServiceUuid = (\n  uuid: string\n): BluetoothInfos | undefined => serviceUuidToInfos[uuid.toLowerCase()];\n\n/**\n *\n */\nexport interface DeviceModel {\n  id: DeviceModelId;\n  productName: string;\n  productIdMM: number;\n  legacyUsbProductId: number;\n  usbOnly: boolean;\n  memorySize: number;\n  masks: number[];\n  // blockSize: number, // THIS FIELD IS DEPRECATED, use getBlockSize\n  getBlockSize: (firmwareVersion: string) => number;\n  bluetoothSpec?: {\n    serviceUuid: string;\n    writeUuid: string;\n    writeCmdUuid: string;\n    notifyUuid: string;\n  }[];\n}\n\n/**\n *\n */\nexport interface BluetoothInfos {\n  deviceModel: DeviceModel;\n  serviceUuid: string;\n  writeUuid: string;\n  writeCmdUuid: string;\n  notifyUuid: string;\n}\n","/**\n * A Log object\n */\nexport interface Log {\n  type: string;\n  message?: string;\n  data?: any;\n  // unique amount all logs\n  id: string;\n  // date of the log\n  date: Date;\n}\nexport type Unsubscribe = () => void;\nexport type Subscriber = (arg0: Log) => void;\nlet id = 0;\nconst subscribers: Subscriber[] = [];\n\n/**\n * log something\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\nexport const log = (type: string, message?: string, data?: any) => {\n  const obj: Log = {\n    type,\n    id: String(++id),\n    date: new Date(),\n  };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n\n/**\n * listen to logs.\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\nexport const listen = (cb: Subscriber): Unsubscribe => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log: Log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n// for debug purpose\n\ndeclare global {\n  interface Window {\n    __ledgerLogsListen: any;\n  }\n}\n\nif (typeof window !== \"undefined\") {\n  window.__ledgerLogsListen = listen;\n}\n","import Transport from \"@ledgerhq/hw-transport\";\nimport type {\n  Observer,\n  DescriptorEvent,\n  Subscription,\n} from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/lib/hid-framing\";\nimport { identifyUSBProductId, ledgerUSBVendorId } from \"@ledgerhq/devices\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport {\n  TransportOpenUserCancelled,\n  DisconnectedDeviceDuringOperation,\n  DisconnectedDevice,\n  TransportError,\n} from \"@ledgerhq/errors\";\n\nconst ledgerDevices = [\n  {\n    vendorId: ledgerUSBVendorId,\n  },\n];\n\nconst isSupported = () =>\n  Promise.resolve(!!(window.navigator && window.navigator.hid));\n\nconst getHID = (): HID => {\n  // $FlowFixMe\n  const { hid } = navigator;\n  if (!hid)\n    throw new TransportError(\n      \"navigator.hid is not supported\",\n      \"HIDNotSupported\"\n    );\n  return hid;\n};\n\nasync function requestLedgerDevices(): Promise<HIDDevice[]> {\n  const device = await getHID().requestDevice({\n    filters: ledgerDevices,\n  });\n  if (Array.isArray(device)) return device;\n  return [device];\n}\n\nasync function getLedgerDevices(): Promise<HIDDevice[]> {\n  const devices = await getHID().getDevices();\n  return devices.filter((d) => d.vendorId === ledgerUSBVendorId);\n}\n\nasync function getFirstLedgerDevice(): Promise<HIDDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  const devices = await requestLedgerDevices();\n  return devices[0];\n}\n/**\n * WebHID Transport implementation\n * @example\n * import TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\n * ...\n * TransportWebHID.create().then(transport => ...)\n */\n\nexport default class TransportWebHID extends Transport {\n  device: HIDDevice;\n  deviceModel: DeviceModel | null | undefined;\n  channel = Math.floor(Math.random() * 0xffff);\n  packetSize = 64;\n\n  constructor(device: HIDDevice) {\n    super();\n    this.device = device;\n    this.deviceModel =\n      typeof device.productId === \"number\"\n        ? identifyUSBProductId(device.productId)\n        : undefined;\n    device.addEventListener(\"inputreport\", this.onInputReport);\n  }\n\n  inputs: Buffer[] = [];\n  inputCallback: ((arg0: Buffer) => void) | null | undefined;\n  read = (): Promise<Buffer> => {\n    if (this.inputs.length) {\n      return Promise.resolve((this.inputs.shift() as unknown) as Buffer);\n    }\n\n    return new Promise((success) => {\n      this.inputCallback = success;\n    });\n  };\n  onInputReport = (e: HIDInputReportEvent) => {\n    const buffer = Buffer.from(e.data.buffer);\n\n    if (this.inputCallback) {\n      this.inputCallback(buffer);\n      this.inputCallback = null;\n    } else {\n      this.inputs.push(buffer);\n    }\n  };\n\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  static isSupported = isSupported;\n\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  static list = getLedgerDevices;\n\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  static listen = (\n    observer: Observer<DescriptorEvent<HIDDevice>>\n  ): Subscription => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(\n      (device) => {\n        if (!device) {\n          observer.error(\n            new TransportOpenUserCancelled(\"Access denied to use Ledger device\")\n          );\n        } else if (!unsubscribed) {\n          const deviceModel =\n            typeof device.productId === \"number\"\n              ? identifyUSBProductId(device.productId)\n              : undefined;\n          observer.next({\n            type: \"add\",\n            descriptor: device,\n            deviceModel,\n          });\n          observer.complete();\n        }\n      },\n      (error) => {\n        observer.error(new TransportOpenUserCancelled(error.message));\n      }\n    );\n\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n\n    return {\n      unsubscribe,\n    };\n  };\n\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  static async request() {\n    const [device] = await requestLedgerDevices();\n    return TransportWebHID.open(device);\n  }\n\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  static async openConnected() {\n    const devices = await getLedgerDevices();\n    if (devices.length === 0) return null;\n    return TransportWebHID.open(devices[0]);\n  }\n\n  /**\n   * Create a Ledger transport with a HIDDevice\n   */\n  static async open(device: HIDDevice) {\n    await device.open();\n    const transport = new TransportWebHID(device);\n\n    const onDisconnect = (e) => {\n      if (device === e.device) {\n        getHID().removeEventListener(\"disconnect\", onDisconnect);\n\n        transport._emitDisconnect(new DisconnectedDevice());\n      }\n    };\n\n    getHID().addEventListener(\"disconnect\", onDisconnect);\n    return transport;\n  }\n\n  _disconnectEmitted = false;\n  _emitDisconnect = (e: Error) => {\n    if (this._disconnectEmitted) return;\n    this._disconnectEmitted = true;\n    this.emit(\"disconnect\", e);\n  };\n\n  /**\n   * Release the transport device\n   */\n  async close(): Promise<void> {\n    await this.exchangeBusyPromise;\n    this.device.removeEventListener(\"inputreport\", this.onInputReport);\n    await this.device.close();\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  exchange = async (apdu: Buffer): Promise<Buffer> => {\n    const b = await this.exchangeAtomicImpl(async () => {\n      const { channel, packetSize } = this;\n      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n      const framing = hidFraming(channel, packetSize);\n      // Write...\n      const blocks = framing.makeBlocks(apdu);\n\n      for (let i = 0; i < blocks.length; i++) {\n        await this.device.sendReport(0, blocks[i]);\n      }\n\n      // Read...\n      let result;\n      let acc;\n\n      while (!(result = framing.getReducedResult(acc))) {\n        const buffer = await this.read();\n        acc = framing.reduceResponse(acc, buffer);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    }).catch((e) => {\n      if (e && e.message && e.message.includes(\"write\")) {\n        this._emitDisconnect(e);\n\n        throw new DisconnectedDeviceDuringOperation(e.message);\n      }\n\n      throw e;\n    });\n    return b as Buffer;\n  };\n\n  setScrambleKey() {}\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["errors_1","require","asUInt16BE","value","b","Buffer","alloc","writeUInt16BE","initialAcc","data","dataLength","sequence","exports","channel","packetSize","makeBlocks","apdu","concat","length","blockSize","nbBlocks","Math","ceil","fill","blocks","i","head","writeUInt8","chunk","slice","push","reduceResponse","acc","_a","readUInt16BE","TransportError","readUInt8","chunkData","getReducedResult","_classCallCheck","_createClass","Yallist","MAX","Symbol","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","LRUCache","options","max","TypeError","this","Infinity","lc","stale","maxAge","dispose","noDisposeOnSet","updateAgeOnGet","reset","key","get","set","mL","trim","allowStale","mA","lC","_this","forEach","hit","fn","thisp","walker","tail","prev","forEachStep","next","toArray","map","k","_this2","Map","_this3","isStale","v","e","now","filter","h","Date","len","has","del","item","Entry","unshift","node","arr","l","expiresAt","_this4","self","doUse","unshiftNode","diff","delete","removeNode","undefined","call","module","ANY","Comparator","comp","parseOptions","loose","debug","parse","semver","operator","version","r","re","t","COMPARATORLOOSE","COMPARATOR","m","match","SemVer","er","cmp","Range","test","includePrerelease","startsWith","includes","_require","range","raw","format","split","parseRange","c","first","isNullSet","_step","_iterator","_createForOfIteratorHelper","s","n","done","isAny","err","f","comps","join","memoKey","FLAG_INCLUDE_PRERELEASE","FLAG_LOOSE","cached","cache","hr","HYPHENRANGELOOSE","HYPHENRANGE","replace","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","rangeList","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","parseComparator","replaceGTE0","_step2","rangeMap","comparators","_iterator2","size","result","_toConsumableArray","values","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","intersects","testSet","_require2","remainingComparators","testComparator","pop","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","id","toLowerCase","replaceTilde","TILDELOOSE","TILDE","_","M","p","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","prerelease","allowed","major","minor","patch","MAX_LENGTH","MAX_SAFE_INTEGER","compareIdentifiers","LOOSE","FULL","num","build","other","compareMain","comparePre","a","release","identifier","identifierBase","inc","base","Number","Error","isNaN","eq","neq","gt","gte","lt","lte","op","String","rtl","COERCERTL","exec","index","lastIndex","COERCE","versionA","versionB","compare","compareBuild","version1","version2","v1","v2","comparison","v1Higher","lowVersion","highHasPre","prefix","throwErrors","arguments","parsed","list","sort","internalRe","constants","identifiers","valid","clean","rcompare","compareLoose","rsort","coerce","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","src","tokens","SEMVER_SPEC_VERSION","RELEASE_TYPES","rcompareIdentifiers","MAX_SAFE_COMPONENT_LENGTH","process","NODE_DEBUG","_console","_len","args","Array","_key","console","error","apply","numeric","anum","bnum","looseOption","Object","freeze","emptyOpts","R","createToken","name","isGlobal","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","LONETILDE","LONECARET","r1","r2","versions","maxSV","rangeObj","min","minSV","minver","_loop","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","high","low","_ret","ranges","_i","_set","_set$_i","_slicedToArray","simplified","original","minimumVersionWithPreRelease","minimumVersion","simpleSubset","sub","dom","_step3","gtltComp","eqSet","Set","_iterator3","higherGT","lowerLT","add","_step4","higher","lower","hasDomLT","hasDomGT","_iterator4","_step6","_iterator6","needDomLTPre","needDomGTPre","_step5","_iterator5","sawNonNull","OUTER","simpleSub","simpleDom","isSub","_regeneratorRuntime","prototype","iterator","mark","_callee","wrap","_context","stop","insert","inserted","Node","create","pushNode","res","shift","forEachReverse","getReverse","mapReverse","reduce","initial","reduceReverse","toArrayReverse","sliceReverse","splice","start","deleteCount","reverse","DeviceModelId","devices","blue","productName","productIdMM","legacyUsbProductId","usbOnly","memorySize","masks","getBlockSize","_firwareVersion","nanoS","firmwareVersion","nanoSP","_firmwareVersion","nanoX","bluetoothSpec","serviceUuid","notifyUuid","writeUuid","writeCmdUuid","nanoFTS","devicesList","ledgerUSBVendorId","identifyUSBProductId","usbProductId","legacy","find","d","mm","bluetoothServices","serviceUuidToInfos","deviceModel","spec","__assign","subscribers","log","type","message","obj","date","dispatch","window","__ledgerLogsListen","cb","indexOf","ledgerDevices","vendorId","isSupported","Promise","resolve","navigator","hid","getHID","requestLedgerDevices","requestDevice","filters","device","sent","isArray","getLedgerDevices","getDevices","TransportWebHID","_super","floor","random","inputs","read","success","inputCallback","onInputReport","buffer","_disconnectEmitted","_emitDisconnect","emit","exchange","__awaiter","exchangeAtomicImpl","toString","framing","hidFraming","sendReport","_b","DisconnectedDeviceDuringOperation","productId","addEventListener","__extends","request","__read","open","openConnected","transport","onDisconnect","removeEventListener","DisconnectedDevice","close","exchangeBusyPromise","setScrambleKey","listen","observer","unsubscribed","existingDevices","getFirstLedgerDevice","then","descriptor","complete","TransportOpenUserCancelled","unsubscribe","Transport","arrayLikeToArray","__esModule","iter","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread"],"sourceRoot":""}