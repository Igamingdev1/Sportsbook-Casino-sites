{"version":3,"file":"static/js/683.217e809b.chunk.js","mappings":"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","sources":["utils/number.tsx","views/mybets/index.tsx"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport NumberFormat from 'react-number-format';\r\nexport var toNumber = function (number, fixed, status) {\r\n    if (fixed === void 0) { fixed = 5; }\r\n    if (status === void 0) { status = false; }\r\n    if (!number || isNaN(number)) {\r\n        if (status) {\r\n            return Number(0).toFixed(fixed);\r\n        }\r\n        return '0.00';\r\n    }\r\n    if (status) {\r\n        return Number(number).toFixed(fixed).toLocaleString();\r\n    }\r\n    return Number(Number(number).toFixed(fixed)).toLocaleString();\r\n};\r\nexport var toNumberTag = function (number, fixed) {\r\n    if (number === void 0) { number = 0; }\r\n    if (fixed === void 0) { fixed = 5; }\r\n    if (!number || isNaN(number)) {\r\n        return '0.00';\r\n    }\r\n    return _jsx(NumberFormat, { value: Number(Number(number).toFixed(fixed)), displayType: \"text\", thousandSeparator: true });\r\n};\r\n","var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n};\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useTheme, Card, CardContent, CardHeader, Divider, Grid, IconButton, Skeleton, Stack, Typography } from '@mui/material';\r\nimport LinkIcon from '@mui/icons-material/Link';\r\nimport KeyboardArrowLeftIcon from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport moment from 'moment';\r\nimport { BASE_URL } from 'config';\r\nimport useApi from 'hooks/useApi';\r\nimport useConfig from 'hooks/useConfig';\r\nimport snackbar from 'utils/snackbar';\r\nimport { toNumber } from 'utils/number';\r\nimport { StatusBadge } from 'ui-component';\r\nimport { MultibetIcon, StatusIcon } from 'ui-component/SvgIcon';\r\nimport Transitions from 'ui-component/extended/Transitions';\r\nimport OddNum from 'views/sports/component/OddNum';\r\nvar MybetsActive = function () {\r\n    var formatMessage = useIntl().formatMessage;\r\n    var _a = useConfig(), locale = _a.locale, boxShadow = _a.boxShadow;\r\n    var theme = useTheme();\r\n    moment.locale(locale);\r\n    var Api = useApi();\r\n    var navigate = useNavigate();\r\n    var _b = useState([]), activeOdds = _b[0], setActiveOdds = _b[1];\r\n    var _c = useState(false), loading = _c[0], setLoading = _c[1];\r\n    var _d = useState([]), history = _d[0], setHistory = _d[1];\r\n    var getMybets = function () {\r\n        setLoading(true);\r\n        Api.getMybets('Active')\r\n            .then(function (_a) {\r\n            var data = _a.data;\r\n            setHistory(data);\r\n            setLoading(false);\r\n        })\r\n            .catch(function () {\r\n            setLoading(false);\r\n        });\r\n    };\r\n    var onActive = function (id) {\r\n        var findIndex = activeOdds.indexOf(id);\r\n        if (findIndex === -1) {\r\n            setActiveOdds(__spreadArray(__spreadArray([], activeOdds, true), [id], false));\r\n        }\r\n        else {\r\n            var data = __spreadArray([], activeOdds, true);\r\n            data.splice(findIndex, 1);\r\n            setActiveOdds(__spreadArray([], data, true));\r\n        }\r\n    };\r\n    useEffect(function () {\r\n        getMybets();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n    if (loading)\r\n        return _jsx(Skeleton, { variant: \"rectangular\", height: 300, sx: { borderRadius: '18px', boxShadow: boxShadow } });\r\n    return (_jsx(Grid, __assign({ container: true, spacing: 1 }, { children: history.map(function (item, key) { return (_jsx(Grid, __assign({ item: true, xs: 12, sm: 6, lg: 4 }, { children: _jsx(Transitions, __assign({ in: true, direction: \"left\", type: \"slide\" }, { children: _jsxs(Card, __assign({ sx: {\r\n                        mb: 1,\r\n                        boxShadow: boxShadow\r\n                    }, style: { borderRadius: '4px' } }, { children: [_jsx(CardHeader, { sx: {\r\n                                background: theme.palette.dark[600],\r\n                                p: 1.5,\r\n                                '& .MuiCardHeader-title': {\r\n                                    fontSize: '14px'\r\n                                },\r\n                                '& svg': {\r\n                                    fontSize: '16px'\r\n                                },\r\n                                boxShadow: boxShadow\r\n                            }, title: _jsxs(Stack, __assign({ direction: \"row\", alignItems: \"center\", justifyContent: \"space-between\", spacing: 1 }, { children: [_jsxs(Stack, __assign({ direction: \"row\", alignItems: \"center\", spacing: 1 }, { children: [item.type === 'multi' ? (_jsx(MultibetIcon, {})) : (_jsx(\"i\", { className: \"sportsicons sportsicon-\".concat(item.sport[0].SportId), style: { fontSize: '20px' } })), _jsx(StatusBadge, { status: item.status })] })), _jsxs(Stack, __assign({ direction: \"row\", alignItems: \"center\", spacing: 1 }, { children: [moment(item.createdAt).format('ddd, MMM YY, h:mm A'), _jsx(IconButton, __assign({ onClick: function () { return onActive((item === null || item === void 0 ? void 0 : item._id) || ''); }, size: \"small\" }, { children: activeOdds.indexOf((item === null || item === void 0 ? void 0 : item._id) || '') !== -1 ? (_jsx(KeyboardArrowDownIcon, {})) : (_jsx(KeyboardArrowLeftIcon, {})) }))] }))] })) }), _jsxs(CardContent, __assign({ sx: { background: theme.palette.dark[700], p: 1.5 }, style: { paddingBottom: '12px' } }, { children: [activeOdds.indexOf((item === null || item === void 0 ? void 0 : item._id) || '') !== -1 && (_jsx(Transitions, __assign({ in: true, direction: \"left\", type: \"slide\" }, { children: item.bettings.map(function (bettting, index) { return (_jsxs(Stack, { children: [_jsxs(Stack, __assign({ direction: \"row\", alignItems: \"center\", spacing: 1 }, { children: [_jsx(StatusIcon, { status: bettting.status }), _jsx(Typography, __assign({ onClick: function () { return navigate(\"/events/\".concat(bettting.eventId)); }, sx: { pt: 0.5, cursor: 'pointer' } }, { children: \"\".concat(bettting.HomeTeam, \" - \").concat(bettting.AwayTeam) }))] })), _jsx(Typography, __assign({ variant: \"body2\" }, { children: bettting.marketName && _jsx(FormattedMessage, { id: bettting.marketName }) })), _jsxs(Stack, __assign({ direction: \"row\", justifyContent: \"space-between\" }, { children: [_jsx(Typography, __assign({ variant: \"body2\", color: \"white\" }, { children: bettting.oddName })), _jsx(OddNum, { odd: bettting.odds, color: \"primary\" })] })), _jsx(Divider, { sx: { my: 1 } })] }, index)); }) }))), _jsxs(Stack, __assign({ direction: \"row\", justifyContent: \"space-between\" }, { children: [_jsx(Typography, __assign({ variant: \"body2\" }, { children: _jsx(FormattedMessage, { id: \"Total Odds\" }) })), _jsx(Typography, __assign({ variant: \"body2\", color: \"primary\" }, { children: toNumber(item.odds) }))] })), _jsxs(Stack, __assign({ direction: \"row\", justifyContent: \"space-between\" }, { children: [_jsx(Typography, __assign({ variant: \"body2\" }, { children: _jsx(FormattedMessage, { id: \"Total Stack\" }) })), _jsxs(Stack, __assign({ direction: \"row\", alignItems: \"center\", spacing: 0.5 }, { children: [_jsx(Typography, __assign({ variant: \"body2\", className: \"text-ellipse\", color: \"white\", sx: { maxWidth: '100px' } }, { children: toNumber(item.stake) })), _jsx(\"img\", { width: \"16px\", src: item.currency.icon, alt: \"icon\" })] }))] })), _jsxs(Stack, __assign({ direction: \"row\", justifyContent: \"space-between\" }, { children: [_jsx(Typography, __assign({ variant: \"body2\" }, { children: _jsx(FormattedMessage, { id: \"Payout\" }) })), _jsxs(Stack, __assign({ direction: \"row\", alignItems: \"center\", spacing: 0.5 }, { children: [_jsx(Typography, __assign({ variant: \"body2\", className: \"text-ellipse\", color: \"white\", sx: { maxWidth: '100px' } }, { children: toNumber(item.potential) })), _jsx(\"img\", { width: \"16px\", src: item.currency.icon, alt: \"icon\" })] }))] })), _jsx(Divider, { sx: { my: 1 } }), _jsxs(Stack, __assign({ direction: \"row\", justifyContent: \"space-between\" }, { children: [_jsx(CopyToClipboard, __assign({ text: item._id, onCopy: function () { return snackbar(formatMessage({ id: 'Copied' })); } }, { children: _jsx(IconButton, __assign({ sx: {\r\n                                                    width: '30px',\r\n                                                    height: '30px',\r\n                                                    borderRadius: '30px'\r\n                                                } }, { children: _jsx(Typography, __assign({ variant: \"body2\", color: \"white\", sx: { textTransform: 'uppercase' } }, { children: \"ID\" })) })) })), _jsx(CopyToClipboard, __assign({ text: \"\".concat(BASE_URL, \"/?b=\").concat(item.betsId), onCopy: function () { return snackbar(formatMessage({ id: 'Copied' })); } }, { children: _jsx(IconButton, __assign({ sx: {\r\n                                                    width: '30px',\r\n                                                    height: '30px',\r\n                                                    borderRadius: '30px'\r\n                                                } }, { children: _jsx(LinkIcon, { sx: { transform: 'rotate(-45deg)' } }) })) }))] }))] }))] })) })) }), key)); }) })));\r\n};\r\nexport default MybetsActive;\r\n"],"names":["toNumber","number","fixed","status","isNaN","Number","toFixed","toLocaleString","toNumberTag","_jsx","NumberFormat","value","displayType","thousandSeparator","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__spreadArray","to","from","pack","ar","l","Array","slice","concat","formatMessage","useIntl","_a","useConfig","locale","boxShadow","theme","useTheme","moment","Api","useApi","navigate","useNavigate","_b","useState","activeOdds","setActiveOdds","_c","loading","setLoading","_d","history","setHistory","useEffect","getMybets","then","data","catch","Skeleton","variant","height","sx","borderRadius","Grid","container","spacing","children","map","item","key","xs","sm","lg","Transitions","in","direction","type","_jsxs","Card","mb","style","CardHeader","background","palette","dark","fontSize","title","Stack","alignItems","justifyContent","MultibetIcon","className","sport","SportId","StatusBadge","createdAt","format","IconButton","onClick","id","findIndex","indexOf","splice","onActive","_id","size","KeyboardArrowDownIcon","KeyboardArrowLeftIcon","CardContent","paddingBottom","bettings","bettting","index","StatusIcon","Typography","eventId","pt","cursor","HomeTeam","AwayTeam","marketName","FormattedMessage","color","oddName","OddNum","odd","odds","Divider","my","maxWidth","stake","width","src","currency","icon","alt","potential","CopyToClipboard","text","onCopy","snackbar","textTransform","BASE_URL","betsId","LinkIcon","transform"],"sourceRoot":""}